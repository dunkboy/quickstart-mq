<?xml version="1.0" encoding="UTF-8"?>
<config>
	<!-- 客户端所属中心 -->
	<center>amsCenter</center>
	<!-- 事务消息存储方式 -->
	<storageType>db</storageType>
    <!-- 消费者是推还是拉模式 pull push,一般都是用的推的模式,拉会自动用定时任务去拉，100ms拉一次-->
	<consumeType>pull</consumeType>
	<warmUpper>org.quickstart.msgframe.v1.consumer.WarmUpperImplTest</warmUpper>
	<prodInjection>org.quickstart.msgframe.v1.producer.ProInjectionImpl</prodInjection>
	<log4x>true</log4x>
		<persistence>
		<exceptionPersistence>
			<isExceptionPersitence>false</isExceptionPersitence>
			<!-- 持久化类型：db（数据库）,class(实现类) -->
			<exceptionType>class</exceptionType>
			<!-- 生产者异常处理,必须实现com.ai.aif.msgframe.common.ex.exception.IExceptionPersitence接口 -->
			<producerExceptionClass>org.quickstart.msgframe.v1.producer.ProducerExceptionHandle</producerExceptionClass>
			<!-- 消费者异常处理,必须实现com.ai.aif.msgframe.common.ex.exception.IExceptionPersitence接口 -->
			<consumerExceptionClass>org.quickstart.msgframe.v1.consumer.ConsumerExceptionHandle</consumerExceptionClass>
		</exceptionPersistence>

		<!-- logPersistence 消息是否进行客户端持久化-false、true-->
		<logPersistence>
			<isLogPersistence>false</isLogPersistence>
			<!--logType 消息客户端持久化方式 -file、db -->
			<logType>class</logType>
			<!-- 生产者日志处理,必须实现com.ai.aif.msgframe.common.log.msglog.ILogPersitence接口 -->
			<producerLogClass>test.MsgRemoteProducerLogImpl</producerLogClass>
			<!-- 消费者日志处理,必须实现com.ai.aif.msgframe.common.log.msglog.ILogPersitence接口 -->
			<consumerLogClass>test.MsgRemoteConsumerLogImpl</consumerLogClass>
	    </logPersistence>

	</persistence>
	<!-- subscribeCenter 订阅的中心，统一化配置 -->
	<subscribes>
		<subscribe subscribeCenter="amsCenter"  subDestination="AmsPaperLessPrint" tag="*" transaction="true" implclass="org.quickstart.msgframe.v1.consumer.ConsumerProcessorImpl"/>
		<subscribe subscribeCenter="amsCenter"  subDestination="topicTest" tag="*" transaction="true" implclass="org.quickstart.msgframe.v1.consumer.ConsumerProcessorImpl"/>
		<subscribe subscribeCenter="amsCenter"  subDestination="tagTopic" tag="tag" transaction="true" implclass="org.quickstart.msgframe.v1.consumer.ConsumerProcessorImpl"/>
		<subscribe subscribeCenter="amsCenter"  subDestination="tagTopic" tag="tag2" transaction="true" implclass="org.quickstart.msgframe.v1.consumer.ConsumerProcessorImpl"/>
	</subscribes>

	<!--后面都是从控制台拉取得数据,需要发送的topic或者queue  -->
	<destinations number="3" timeout="2000" resendtimes="3" resenddelay="1000">
<!-- 订单接收后业务处理 -->
		<queue fromCenter="amsCenter" order="false" name="AmsPaperLessPrint" belong="amsCenter" />
		<queue fromCenter="amsCenter" order="false" name="topicTest" belong="amsCenter" />
		<queue fromCenter="amsCenter" order="false" name="tagTopic" belong="amsCenter"  ruleclass="com.ai.aif.msgframe.common.ex.MyDestinationRule"/>
	</destinations>

	<!-- containClusters: 定义了中心部署在哪些集群上 -->
	<centers>
		<center name="amsCenter" containClusters="cluster-1,cluster-2" />
	</centers>
	<clusters>
	
	<cluster name="cluster-1" poolSize="1" type="activemq">
 			  <url>failover:(tcp://20.26.38.162:61616)</url>
		</cluster>

		<cluster name="cluster-2" poolSize="1" type="activemq">
 			  <url>failover:(tcp://20.26.38.163:61616)</url>
		</cluster>

	</clusters>

</config>
